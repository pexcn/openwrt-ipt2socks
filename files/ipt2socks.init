#!/bin/sh /etc/rc.common
#
# Copyright (C) 2019-2022 pexcn <i@pexcn.me>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=99

USE_PROCD=1
#PROCD_DEBUG=1

append_param() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local default="$4"
	local _loctmp
	config_get _loctmp "$section" "$option" "$default"
	[ -n "$_loctmp" ] || return 0
	procd_append_param command "$switch" "$_loctmp"
}

append_bool() {
	local section="$1"
	local option="$2"
	local value="$3"
	local default="$4"
	local _loctmp
	config_get_bool _loctmp "$section" "$option" "$default"
	[ "$_loctmp" = 1 ] || return 0
	procd_append_param command "$value"
}

append_param_if_neq() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local compare="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" ] || return 0
	[ "$_loctmp" != "$compare" ] || return 0
	procd_append_param command "$switch" "$_loctmp"
}

get_cpu_cores() {
	grep -c "^processor" /proc/cpuinfo
}

start_ipt2socks() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	local reuse_port instances=$(get_cpu_cores)
	config_get_bool reuse_port $1 reuse_port
	[ "$reuse_port" = 1 ] || instances=1

	for i in $(seq 1 $instances); do
		procd_open_instance
		procd_set_param respawn
		procd_set_param stdout 1
		procd_set_param stderr 1
		procd_set_param nice -5
		procd_set_param limits nofile="1048576 1048576"
		procd_set_param command /usr/bin/ipt2socks
		append_param_if_neq $1 server_addr "-s" "127.0.0.1"
		append_param_if_neq $1 server_port "-p" "1080"
		append_param $1 auth_username "-a"
		append_param $1 auth_password "-k"
		append_param_if_neq $1 listen_addr4 "-b" "127.0.0.1"
		append_param_if_neq $1 listen_addr6 "-B" "::1"
		append_param_if_neq $1 listen_port "-l" "60080"
		append_param $1 tcp_syncnt "-S"
		append_param_if_neq $1 cache_size "-c" "256"
		append_param_if_neq $1 udp_timeout "-o" "60"
		append_param_if_neq $1 thread_nums "-j" "1"
		append_param $1 nofile_limit "-n"
		append_param $1 run_user "-u"
		append_bool $1 tcp_only "-T"
		append_bool $1 udp_only "-U"
		append_bool $1 ipv4_only "-4"
		append_bool $1 ipv6_only "-6"
		append_bool $1 redirect "-R"
		append_bool $1 reuse_port "-r"
		append_bool $1 tfo_accept "-w"
		append_bool $1 tfo_connect "-W"
		append_bool $1 verbose "-v"
		procd_close_instance
	done
}

start_service() {
	config_load ipt2socks
	config_foreach start_ipt2socks ipt2socks
}
